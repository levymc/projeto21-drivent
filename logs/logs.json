[33m[nodemon] 2.0.22[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): src/**/*[39m
[33m[nodemon] watching extensions: ts[39m
[32m[nodemon] starting `ts-node -r tsconfig-paths/register ./src/server.ts`[39m
Server is listening on port 4000.
{"level":"INFO","time":1695597598156,"msg":"postTicket START"}
{"level":"INFO","time":1695597598157,"msg":"ticketsService.createTicket START"}
{"level":"TRACE","time":1695597598157,"msg":"ticketsRepository.create START"}
{"level":"ERROR","time":1695597598224,"err":{"type":"PrismaClientValidationError","message":"\nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:43:39\n\n  40 \n  41 async function create(data: Ticket) {\n  42   logger.trace('ticketsRepository.create START');\nâ†’ 43   const retorno = await prisma.ticket.create({\n         data: {\n           status: 'RESERVED',\n           ticketTypeId: 1,\n           enrollmentId: 2,\n           TicketType: {\n           ~~~~~~~~~~\n             name: 'Nome do Ticket',\n             price: 100,\n             isRemote: true,\n             includesHotel: false\n           }\n         }\n       })\n\nUnknown arg `TicketType` in data.TicketType for type TicketUncheckedCreateInput. Did you mean `ticketTypeId`? Available args:\ntype TicketUncheckedCreateInput {\n  id?: Int\n  ticketTypeId: Int\n  status: String\n  enrollmentId: Int\n  createdAt?: DateTime\n  updatedAt?: DateTime\n  Payment?: PaymentUncheckedCreateNestedManyWithoutTicketInput\n}\n\n","stack":"Error: \nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:43:39\n\n  40 \n  41 async function create(data: Ticket) {\n  42   logger.trace('ticketsRepository.create START');\nâ†’ 43   const retorno = await prisma.ticket.create({\n         data: {\n           status: 'RESERVED',\n           ticketTypeId: 1,\n           enrollmentId: 2,\n           TicketType: {\n           ~~~~~~~~~~\n             name: 'Nome do Ticket',\n             price: 100,\n             isRemote: true,\n             includesHotel: false\n           }\n         }\n       })\n\nUnknown arg `TicketType` in data.TicketType for type TicketUncheckedCreateInput. Did you mean `ticketTypeId`? Available args:\ntype TicketUncheckedCreateInput {\n  id?: Int\n  ticketTypeId: Int\n  status: String\n  enrollmentId: Int\n  createdAt?: DateTime\n  updatedAt?: DateTime\n  Payment?: PaymentUncheckedCreateNestedManyWithoutTicketInput\n}\n\n\n    at Object.validate (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:44201:20)\n    at PrismaClient._executeRequest (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46354:17)\n    at consumer (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46298:23)\n    at /home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46302:76\n    at runInChildSpan (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:45510:12)\n    at /home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46302:20\n    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n    at PrismaClient._request (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46301:86)\n    at /home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:42862:25\n    at _callback (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:42626:52)","clientVersion":"3.14.0"},"msg":"\nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:43:39\n\n  40 \n  41 async function create(data: Ticket) {\n  42   logger.trace('ticketsRepository.create START');\nâ†’ 43   const retorno = await prisma.ticket.create({\n         data: {\n           status: 'RESERVED',\n           ticketTypeId: 1,\n           enrollmentId: 2,\n           TicketType: {\n           ~~~~~~~~~~\n             name: 'Nome do Ticket',\n             price: 100,\n             isRemote: true,\n             includesHotel: false\n           }\n         }\n       })\n\nUnknown arg `TicketType` in data.TicketType for type TicketUncheckedCreateInput. Did you mean `ticketTypeId`? Available args:\ntype TicketUncheckedCreateInput {\n  id?: Int\n  ticketTypeId: Int\n  status: String\n  enrollmentId: Int\n  createdAt?: DateTime\n  updatedAt?: DateTime\n  Payment?: PaymentUncheckedCreateNestedManyWithoutTicketInput\n}\n\n"}
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `ts-node -r tsconfig-paths/register ./src/server.ts`[39m
Server is listening on port 4000.
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `ts-node -r tsconfig-paths/register ./src/server.ts`[39m
Server is listening on port 4000.
{"level":"INFO","time":1695597788365,"msg":"postTicket START"}
{ status: 'RESERVED', enrollmentId: 2, ticketTypeId: 1 }
{"level":"INFO","time":1695597788366,"msg":"ticketsService.createTicket START"}
{"level":"TRACE","time":1695597788367,"msg":"ticketsRepository.create START"}
{"level":"ERROR","time":1695597788465,"err":{"type":"PrismaClientKnownRequestError","message":"\nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:44:39\n\n  41 async function create(data: Ticket) {\n  42   console.log(data);\n  43   logger.trace('ticketsRepository.create START');\nâ†’ 44   const retorno = await prisma.ticket.create(\n  Foreign key constraint failed on the field: `ticket_enrollmentId_fkey (index)`","stack":"Error: \nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:44:39\n\n  41 async function create(data: Ticket) {\n  42   console.log(data);\n  43   logger.trace('ticketsRepository.create START');\nâ†’ 44   const retorno = await prisma.ticket.create(\n  Foreign key constraint failed on the field: `ticket_enrollmentId_fkey (index)`\n    at Object.request (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:45405:15)\n    at async PrismaClient._request (/home/levy/Documentos/Driven/projetos/projeto21-drivent/node_modules/@prisma/client/runtime/index.js:46301:18)\n    at async Object.create (/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:44:19)\n    at async Object.createTicket (/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/services/tickets-service.ts:21:19)\n    at async postTicket (/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/controllers/tickets-controller.ts:22:24)","code":"P2003","clientVersion":"3.14.0","meta":{"field_name":"ticket_enrollmentId_fkey (index)"}},"msg":"\nInvalid `prisma.ticket.create()` invocation in\n/home/levy/Documentos/Driven/projetos/projeto21-drivent/src/repositories/tickets-repository.ts:44:39\n\n  41 async function create(data: Ticket) {\n  42   console.log(data);\n  43   logger.trace('ticketsRepository.create START');\nâ†’ 44   const retorno = await prisma.ticket.create(\n  Foreign key constraint failed on the field: `ticket_enrollmentId_fkey (index)`"}
